name: OAuth Token Updater

on:
  workflow_dispatch:
    inputs:
      access_token:
        description: "New Claude Access Token"
        required: true
        type: string
      refresh_token:
        description: "New Claude Refresh Token"
        required: true
        type: string
      expires_at:
        description: "Token Expiration Timestamp"
        required: true
        type: string

jobs:
  update-secrets:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Update OAuth Secrets
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          script: |
            const { owner, repo } = context.repo;

            // Get public key for secret encryption
            const { data: key } = await github.rest.actions.getRepoPublicKey({
              owner,
              repo
            });

            // Helper function to encrypt secret
            const sodium = require('tweetsodium');
            function encryptSecret(secret) {
              const messageBytes = Buffer.from(secret);
              const keyBytes = Buffer.from(key.key, 'base64');
              const encryptedBytes = sodium.seal(messageBytes, keyBytes);
              return Buffer.from(encryptedBytes).toString('base64');
            }

            // Update secrets
            await github.rest.actions.createOrUpdateRepoSecret({
              owner,
              repo,
              secret_name: 'CLAUDE_ACCESS_TOKEN',
              encrypted_value: encryptSecret('${{ inputs.access_token }}'),
              key_id: key.key_id
            });

            await github.rest.actions.createOrUpdateRepoSecret({
              owner,
              repo,
              secret_name: 'CLAUDE_REFRESH_TOKEN',
              encrypted_value: encryptSecret('${{ inputs.refresh_token }}'),
              key_id: key.key_id
            });

            await github.rest.actions.createOrUpdateRepoSecret({
              owner,
              repo,
              secret_name: 'CLAUDE_EXPIRES_AT',
              encrypted_value: encryptSecret('${{ inputs.expires_at }}'),
              key_id: key.key_id
            });

            console.log('âœ… OAuth tokens updated successfully!');
